<template lang="pug">
table.scrip-list
  tr
    th 脚本名
    th 脚本路径
    th 资源处理
    th(style="width: 160px;") babel
    th 异步加载
    th 后部加载
    th 合并配置
    th 操作
  tr(o-for="owo.script.home.data.config.scriptList")
    td.name {value.name}
    td.value {value.src}
    td.resource.input-td
      input(type="checkbox" o-value="owo.script.home.data.config.scriptList[{key}].resource")
    td.babel.input-td
      input(type="checkbox" o-value="owo.script.home.data.config.scriptList[{key}].babel")
    td.defer.input-td
      input(type="checkbox" o-value="owo.script.home.data.config.scriptList[{key}].defer")
    td.input-td
      input(type="checkbox" o-value="owo.script.home.data.config.scriptList[{key}].afterbody")
    td.merge.input-td
      select(o-value="owo.script.home.data.config.scriptList[{key}].merge")
        option(value="") 外部引用
        option(value="html") 合并到HTML中
        option(value="core") 合并到核心文件中
    td.tool
      span.icon(o-tap="delete({key})") &#xe645;
  tr
    td
      input.nameInput(type="text" placeholder="新增样式名称")
    td
      input.srcInput(type="text" placeholder="新增样式路径")
    td.input-td
      input(type="checkbox" o-value="this.data.resource")
    td.input-td
      input(type="checkbox" o-value="this.data.babel")
    td.input-td
      input(type="checkbox" o-value="this.data.defer")
    td.input-td
      input(type="checkbox" o-value="this.data.afterbody")
    td.input-td
      input(type="checkbox" o-value="this.data.merge")
    td.tool
      span.icon(o-tap="add") &#xe600;
</template>

<script>
  module.exports = {
    data: {
      resource: false,
      babel: false,
      defer: false,
      merge: false,
      afterbody: false
    },
    broadcast: {
      changeData: function (value) {
        this.handleEvent()
      }
    },
    changeValue: function (key) {
      const target = this.$target
      const ind = parseInt(target.getAttribute('ind'))
      owo.script.home.data.config.scriptList[ind][key] = !target.classList.contains('check')
      owo.tool.emit('changeData', owo.script.home.data.config)
    },
    changeDataValue: function (dataItem) {
      const target = this.$target
      this.data[dataItem] = !this.data[dataItem]
      if (this.data[dataItem]) {
        target.classList.add('check')
        target.innerHTML = '&#xe661;'
      } else {
        target.classList.remove('check')
        target.innerHTML = '&#xe614;'
      }
    },
    add: function () {
      const name = this.$el.getElementsByClassName('nameInput')[0].value
      const src = this.$el.getElementsByClassName('srcInput')[0].value
      if (name && src) {
        owo.script.home.data.config.scriptList.push({
          name,
          src,
          resource: this.data.resource,
          babel: this.data.babel,
          defer: this.data.defer,
          afterbody: this.data.afterbody
        })
      } else {
        owo.tool.remind('名称和路径不能为空!')
      }
      owo.tool.emit('changeData', owo.script.home.data.config)
    },
    delete: function (key) {
      owo.script.home.data.config.scriptList.splice(key, 1)
      owo.tool.emit('changeData', owo.script.home.data.config)
    }
  }
</script>

<style lang="less">
table {
  width: 100%;
}
tr {
  height: 30px;
  line-height: 30px;
}
th {
  background-color: burlywood;
  text-align: center;
  line-height: 30px;
  color: white;
}
td {
  text-align: left;
  background-color: ghostwhite;
  padding: 0 10px;
  color: #333;
}
.tool {
  text-align: center;
  color: #009fe9;
  font-size: 20px;
}
.input-td {
  text-align: center;
  font-size: 20px;
  color: #ccc;
  cursor: pointer;
}
.check {
  color: orange;
}
</style>
